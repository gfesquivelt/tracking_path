<!DOCTYPE html>

<head>
    <title>Walking down in the streets of Vienna</title>
    <script src="http://maps.googleapis.com/maps/api/js?libraries=geometry"></script>
    <style type="text/css">
    #map {
        width: 600px;
        height: 500px;
        margin: auto;
    }
    #wrap {
      width:1205px;
      height: 500px;
      margin: auto;
    }
    .left {
      width:600px;
      vertical-align: middle;
      height: 500px;
      float: left;
    }
    .right{
      width:600px;
      height: 500px;
      float: right;
    }
    </style>
</head>
<body>

<center><h1>Tracking my walk<br>
<font size="4">
  By Fernando Esquivel</font></h1></center><hr>

<!-- ######################################################################### -->
<!-- TODO: set up the video player (your video ID, width / height & parameters -->
<!-- see https://developers.google.com/youtube/player_parameters#Manual_IFrame_Embeds -->
<!-- ######################################################################### -->
<div id="wrap">
    <div class="left">

    <iframe id="player" width="600" height="500" src="http://www.youtube.com/embed/https://youtu.be/OPFeYHvrcHo?autoplay=0&controls=1&loop=0&showinfo=0&modestbranding=1&fs=0&rel=0&playlist=OPFeYHvrcHo&enablejsapi=1" frameborder="0" allowfullscreen>
    </iframe>

<p style="display: none;" align="center" id="timer"><font size="1"> initializing...</font></p>
    </div>
    <div class="right">
<div id="map"></div>

<script src="https://www.youtube.com/iframe_api"></script>


<script>
// this script uses the Youtube JS iframe API
// see https://developers.google.com/youtube/iframe_api_reference

var player = null,
    duration = 0;

var outputEl = document.getElementById("timer");

// this is called once the youtube API is fully loaded
function onYouTubeIframeAPIReady() {
  player = new YT.Player('player', {
    events: {
      'onReady': onPlayerReady,
      'onStateChange': onPlayerStateChange
    }
  });
}

// this is called once the player is set up
// we can start interacting with the player now...
function onPlayerReady(event) {
    outputEl.textContent = "ready";
    // start animation
    frame();
}

// this function is called every time the players state changes
function onPlayerStateChange(event) {
    // ############################################################
    // TODO: you could update your page to reflect the player state
    // ############################################################
    if (event.data == YT.PlayerState.PLAYING) {
        console.log("playing");
    }
    if (event.data == YT.PlayerState.PAUSED) {
        console.log("paused");
    }
}

// our main animation function
// will be called repeatedly after the player is ready
function frame() {
    var state = player.getPlayerState();
    if (state == YT.PlayerState.PLAYING) {
        duration = player.getDuration();

        var time = player.getCurrentTime();
        console.log(time);

        var pos = length * time / duration;
        var coords = interpolator(pos);

        marker.setPosition(coords);
        outputEl.textContent = player.getCurrentTime() + " of " + duration;
    }
    window.requestAnimationFrame(frame)
}

// ------------------------ set up map content ------------------------
var mapOptions = {
    center: { lat: 48.197167, lng: 16.357614 },
    zoom: 15.5
};
var mapEl = document.getElementById('map');
var map = new google.maps.Map(mapEl, mapOptions);

var coords = [
    {lat: 48.198885, lng: 16.363364},
    {lat: 48.197799, lng: 16.361144},
    {lat: 48.197670, lng: 16.360688},
    {lat: 48.197091, lng: 16.357665},
    {lat: 48.196345, lng: 16.354865},
    {lat: 48.196105, lng: 16.354267},
    {lat: 48.195606, lng: 16.353385},
    {lat: 48.195438, lng: 16.353264},
    {lat: 48.195434, lng: 16.353143},
    {lat: 48.194737, lng: 16.352717},
    {lat: 48.194699, lng: 16.352567},
    {lat: 48.194713, lng: 16.352185},
    {lat: 48.195360, lng: 16.351241},
    {lat: 48.195160, lng: 16.351029}
];

var polyline = new google.maps.Polyline({
    path: coords,
    geodesic: true,
    strokeColor: '#FF0000',
    strokeOpacity: 1.0,
    strokeWeight: 2,
    map: map
});

var marker = new google.maps.Marker({
    position: coords[0],
    map: map
});

var length = google.maps.geometry.spherical.computeLength(polyline.getPath().getArray()),
    startTime = Date.now();

var pos = 0;

var interpolator = gPolyInterpolator(polyline);

// ------------------------ interpolation function ------------------------
// returns a function to interpolate along a google maps polyline / polygon
function gPolyInterpolator(polyline) {
    if (!google.maps.geometry.spherical) {
        console.error("This function requires the google.maps.geometry.spherical library!");
        console.error("Load it as described at https://developers.google.com/maps/documentation/javascript/libraries");
        return null;
    }

    var path = polyline.getPath();

    return function(distance) {

        var numVertices = path.getLength();

        var distNext = 0,
            distLast = 0;

        for (var i=1; (i < numVertices && distNext < distance); i++) {
            distLast = distNext;
            distNext += google.maps.geometry.spherical.computeDistanceBetween(path.getAt(i), path.getAt(i-1));
        }
        if (distNext < distance) {
            return path.getAt(numVertices-1);
        }

        var alpha = (distance-distLast)/(distNext-distLast);

        return google.maps.geometry.spherical.interpolate(path.getAt(i-2), path.getAt(i-1), alpha);
    }
}


</script>
    </div>
</div>
<hr>
</body>

